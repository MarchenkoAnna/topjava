<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">


    <beans profile="hsqldb">
        <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
            <jdbc:script location="classpath:db/${jdbc.initLocation}"/>
            <jdbc:script encoding="utf-8" location="classpath:db/populateDB_HSQL.sql"/>
        </jdbc:initialize-database>

        <context:property-placeholder location="classpath:db/hsqldb.properties" system-properties-mode="OVERRIDE"/>

        <!--no pooling-->
        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource"
              p:driverClassName="org.hsqldb.jdbcDriver"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"/>
    </beans>

    <beans profile="postgres">
        <jdbc:initialize-database data-source="dataSource" enabled="${database.init}">
            <jdbc:script location="classpath:db/${jdbc.initLocation}"/>
            <jdbc:script encoding="utf-8" location="classpath:db/populateDB.sql"/>
        </jdbc:initialize-database>

        <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>

        <bean id="dataSource"
              class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="com.mysql.jdbc.Driver"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"/>
    </beans>

    <beans profile="jdbc">
        <context:component-scan base-package="ru.javawebinar.**.repository.jdbc"/>
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
        <bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
    </beans>

    <beans profile="datajpa,jpa">
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="ru.javawebinar.**.model">
            <!--p:persistenceUnitName="persistenceUnit">-->

            <property name="jpaPropertyMap">
                <map>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>-->
                </map>
            </property>

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                      p:showSql="${jpa.showSql}">
                </bean>
            </property>
        </bean>

        <tx:annotation-driven/>

        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>
    </beans>

    <beans profile="datajpa">
        <context:component-scan base-package="ru.javawebinar.**.repository.datajpa"/>
        <jpa:repositories base-package="ru.javawebinar.**.repository.datajpa"/>
    </beans>

    <beans profile="jpa">
        <context:component-scan base-package="ru.javawebinar.**.repository.jpa"/>
    </beans>
</beans>


    <!--<jdbc:initialize-database data-source="dataSource" enabled="${database.init}">-->
        <!--<jdbc:script location="classpath:db/${jdbc.initLocation}"/>-->
        <!--<jdbc:script encoding="utf-8" location="classpath:db/populateDB.sql"/>-->
    <!--</jdbc:initialize-database>-->

    <!--&lt;!&ndash;<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"&ndash;&gt;-->
          <!--&lt;!&ndash;p:dataSource-ref="dataSource"&ndash;&gt;-->
          <!--&lt;!&ndash;p:packagesToScan="ru.javawebinar.**.model">&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;p:persistenceUnitName="persistenceUnit">&ndash;&gt;&ndash;&gt;-->

        <!--&lt;!&ndash;<property name="jpaPropertyMap">&ndash;&gt;-->
            <!--&lt;!&ndash;<map>&ndash;&gt;-->
                <!--&lt;!&ndash;<entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>&ndash;&gt;-->
                <!--&lt;!&ndash;<entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>&ndash;&gt;-->
                <!--&lt;!&ndash;&lt;!&ndash;<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>&ndash;&gt;&ndash;&gt;-->
            <!--&lt;!&ndash;</map>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->

        <!--&lt;!&ndash;<property name="jpaVendorAdapter">&ndash;&gt;-->
            <!--&lt;!&ndash;<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"&ndash;&gt;-->
                  <!--&lt;!&ndash;p:showSql="${jpa.showSql}">&ndash;&gt;-->
            <!--&lt;!&ndash;</bean>&ndash;&gt;-->
        <!--&lt;!&ndash;</property>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--<tx:annotation-driven/>-->

    <!--&lt;!&ndash; Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) &ndash;&gt;-->
    <!--&lt;!&ndash;<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"&ndash;&gt;-->
          <!--&lt;!&ndash;p:entityManagerFactory-ref="entityManagerFactory"/>&ndash;&gt;-->

<!--&lt;!&ndash;-->
    <!--<context:component-scan base-package="ru.javawebinar.**.repository.jdbc"/>-->
    <!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
        <!--<constructor-arg ref="dataSource"/>-->
    <!--</bean>-->

    <!--<bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
        <!--<constructor-arg ref="dataSource"/>-->
    <!--</bean>-->
<!--&ndash;&gt;-->

    <!--<beans profile="hsqldb">-->
        <!--<context:property-placeholder location="classpath:db/hsqldb.properties" system-properties-mode="OVERRIDE"/>-->

        <!--&lt;!&ndash;no pooling&ndash;&gt;-->
        <!--<bean id="dataSource"-->
              <!--class="org.springframework.jdbc.datasource.DriverManagerDataSource"-->
              <!--p:driverClassName="org.hsqldb.jdbcDriver"-->
              <!--p:url="${database.url}"-->
              <!--p:username="${database.username}"-->
              <!--p:password="${database.password}"/>-->
    <!--</beans>-->

    <!--<beans profile="postgres">-->
        <!--<context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>-->

        <!--<bean id="dataSource"-->
              <!--class="org.apache.tomcat.jdbc.pool.DataSource"-->
              <!--p:driverClassName="com.mysql.jdbc.Driver"-->
              <!--p:url="${database.url}"-->
              <!--p:username="${database.username}"-->
              <!--p:password="${database.password}"/>-->
    <!--</beans>-->

    <!--<beans profile="jdbc">-->
        <!--<context:component-scan base-package="ru.javawebinar.**.repository.jdbc"/>-->
        <!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
            <!--<constructor-arg ref="dataSource"/>-->
        <!--</bean>-->

        <!--<bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
            <!--<constructor-arg ref="dataSource"/>-->
        <!--</bean>-->
    <!--</beans>-->
    <!--<beans profile="jpa">-->
        <!--<context:component-scan base-package="ru.javawebinar.**.repository.jpa"/>-->
        <!--<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"-->
              <!--p:dataSource-ref="dataSource"-->
              <!--p:packagesToScan="ru.javawebinar.**.model">-->
            <!--&lt;!&ndash;p:persistenceUnitName="persistenceUnit">&ndash;&gt;-->

            <!--<property name="jpaPropertyMap">-->
                <!--<map>-->
                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>-->
                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>-->
                    <!--&lt;!&ndash;<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>&ndash;&gt;-->
                <!--</map>-->
            <!--</property>-->

            <!--<property name="jpaVendorAdapter">-->
                <!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"-->
                      <!--p:showSql="${jpa.showSql}">-->
                <!--</bean>-->
            <!--</property>-->
        <!--</bean>-->

        <!--<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"-->
              <!--p:entityManagerFactory-ref="entityManagerFactory"/>-->

    <!--</beans>-->
    <!--<beans profile="datajpa">-->
        <!--<context:component-scan base-package="ru.javawebinar.**.repository.datajpa"/>-->
        <!--<jpa:repositories base-package="ru.javawebinar.**.repository.datajpa"/>-->
    <!--</beans>-->
<!--</beans>-->